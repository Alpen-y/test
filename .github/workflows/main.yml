# 🚀 Vue 项目自动化部署工作流
name: 自动构建部署Vue项目

# ⏰ 触发条件：代码推送至主分支时自动执行
on:
  push:
    branches: [ "main" ]

# 🔑 所需权限配置
permissions:
  contents: write  # 允许写入gh-pages分支

# 🏗️ 定义工作流任务
jobs:
  build-and-deploy:
    name: 「构建部署」全流程作业
    runs-on: ubuntu-latest  # 🖥️ 使用最新版Ubuntu运行器

    # 📌 任务步骤分解
    steps:
      # ————————————————————————
      # 🔍 步骤1：代码仓库初始化
      # ————————————————————————
      - name: "🔗 代码仓库初始化 | Checkout"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # ⚙️ 获取完整提交历史

      # ————————————————————————
      # 📦 步骤2：安装 PNPM（移到前面）
      # ————————————————————————

      - name: 设置 Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # 指定 Node.js 版本


      - name: "📦 PNPM包管理器安装 | v8.x"
        uses: pnpm/action-setup@v2
        with:
          version: 8         # 🚀 指定pnpm版本

      # ————————————————————————
      # 🧩 步骤3：依赖安装与构建
      # ————————————————————————
      - name: "⚡ 依赖安装与项目构建"
        run: |
          echo "➡️ 验证环境变量..."
          echo "PATH: $PATH"
          
          echo "➡️ 验证可执行文件..."
          which pnpm  # 应该输出 /opt/hostedtoolcache/pnpm/8.x.x/x64/pnpm
          
          echo "➡️ 正在安装项目依赖..."
          pnpm install --frozen-lockfile
          pnpm build
          ls -lh dist/

      # ————————————————————————
      # 🚀 步骤4：GitHub Pages部署
      # ————————————————————————
      - name: "🌍 部署到GitHub Pages"
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages       # 🎯 目标分支
          folder: dist           # 📁 部署目录
          clean: true            # 🧹 清理旧文件
          single-commit: true    # ✨ 使用单次提交
          commit-message: "🚀 自动部署：$(date -u +'%Y-%m-%dT%H:%M:%SZ')"  # ⏱️ 带时间戳的提交信息

